'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

Object.defineProperty(exports, '__esModule', {
  value: true
});

const SceneItem = require('../SceneItem.js');

const Source = require('../Source.js');

class BrowserSourceItem extends SceneItem.SceneItem {
  constructor(source, scene, id, ref) {
    super(source, scene, id, ref);
    this.updateSizeFromSource(source.settings.width, source.settings.height);
  }

}
/**
 * **Warning**: BrowserSource items will not have correct properties when they are
 * initialized, as browser sources are always created with a width and height of 0.
 * If width and height are not provided in the source's intial settings, it's intial
 * item will have a width and height of 0 until item.getProperties is called,
 * or the source's width and height are updated.
 */


class BrowserSource extends Source.Source {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "browser_source");
  }

  createItemInstance(scene, id, ref) {
    return new BrowserSourceItem(this, scene, id, ref);
  }

  async setSettings(settings) {
    await super.setSettings(settings);
    this.itemInstances.forEach(item => item.updateSizeFromSource(this.settings.width, this.settings.height));
  }

}

exports.BrowserSource = BrowserSource;
exports.BrowserSourceItem = BrowserSourceItem;
//# sourceMappingURL=Browser.js.map
