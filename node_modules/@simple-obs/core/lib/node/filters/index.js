'use strict';

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

Object.defineProperty(exports, '__esModule', {
  value: true
});

const Filter = require('../Filter.js');

class CropPadFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "crop_filter");
  }

}

class LumaKeyFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "luma_key_filter_v2");
  }

}

class ApplyLUTFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "clut_filter");
  }

}

class ColorCorrectionFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "color_filter_v2");
  }

}

exports.ChromaKeyColorType = void 0;

(function (ChromaKeyColorType) {
  ChromaKeyColorType["Green"] = "green";
  ChromaKeyColorType["Blue"] = "blue";
  ChromaKeyColorType["Magenta"] = "magenta";
  ChromaKeyColorType["Custom"] = "custom";
})(exports.ChromaKeyColorType || (exports.ChromaKeyColorType = {}));

class ChromaKeyFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "chroma_key_filter_v2");
  }

}

exports.ColorKeyColorType = void 0;

(function (ColorKeyColorType) {
  ColorKeyColorType["Green"] = "green";
  ColorKeyColorType["Blue"] = "blue";
  ColorKeyColorType["Red"] = "red";
  ColorKeyColorType["Magenta"] = "magenta";
  ColorKeyColorType["Custom"] = "custom";
})(exports.ColorKeyColorType || (exports.ColorKeyColorType = {}));

class ColorKeyFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "color_key_filter_v2");
  }

}

class AspectRatioFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "scale_filter");
  }

}

class ApplyLutFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "clut_filter");
  }

}

exports.MaskBlendSelect = void 0;

(function (MaskBlendSelect) {
  MaskBlendSelect["AlphaMaskAlphaChannel"] = "mask_alpha_filter.effect";
  MaskBlendSelect["AlphaMaskColourChannel"] = "mask_colour_filter.effect";
  MaskBlendSelect["BlendMultiply"] = "blend_mul_filter.effect";
  MaskBlendSelect["BlendAddition"] = "blend_add_filter.effect";
  MaskBlendSelect["BlendSubtraction"] = "blend_sub_filter.effect";
})(exports.MaskBlendSelect || (exports.MaskBlendSelect = {}));

class ImageMaskBlendFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "mask_filter_v2");
  }

}

class RenderDelayFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "gpu_delay");
  }

}

class ScrollFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "scroll_filter");
  }

}

class SharpenFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "sharpness_filter_v2");
  }

}

class CompressorFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "compressor_filter");
  }

}

exports.ExpanderDetectorType = void 0;

(function (ExpanderDetectorType) {
  ExpanderDetectorType["RMS"] = "RMS";
  ExpanderDetectorType["Peak"] = "peak";
})(exports.ExpanderDetectorType || (exports.ExpanderDetectorType = {}));

exports.ExpanderPreset = void 0;

(function (ExpanderPreset) {
  ExpanderPreset["Expander"] = "expander";
  ExpanderPreset["Gate"] = "gate";
})(exports.ExpanderPreset || (exports.ExpanderPreset = {}));

class ExpanderFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "expander_filter");
  }

}

class GainFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "gain_filter");
  }

}

class InvertPolarityFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "gain_filter");
  }

}

class LimiterFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "limiter_filter");
  }

}

class NoiseGateFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "noise_gate_filter");
  }

}

exports.NoiseSuppressMethod = void 0;

(function (NoiseSuppressMethod) {
  NoiseSuppressMethod["Speex"] = "speex";
  NoiseSuppressMethod["RNNoise"] = "rnnoise";
  NoiseSuppressMethod["NVAFX"] = "nvafx";
})(exports.NoiseSuppressMethod || (exports.NoiseSuppressMethod = {}));

class NoiseSuppressFilter extends Filter.Filter {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "type", "noise_suppress_filter");
  }

}

exports.ApplyLUTFilter = ApplyLUTFilter;
exports.ApplyLutFilter = ApplyLutFilter;
exports.AspectRatioFilter = AspectRatioFilter;
exports.ChromaKeyFilter = ChromaKeyFilter;
exports.ColorCorrectionFilter = ColorCorrectionFilter;
exports.ColorKeyFilter = ColorKeyFilter;
exports.CompressorFilter = CompressorFilter;
exports.CropPadFilter = CropPadFilter;
exports.ExpanderFilter = ExpanderFilter;
exports.GainFilter = GainFilter;
exports.ImageMaskBlendFilter = ImageMaskBlendFilter;
exports.InvertPolarityFilter = InvertPolarityFilter;
exports.LimiterFilter = LimiterFilter;
exports.LumaKeyFilter = LumaKeyFilter;
exports.NoiseGateFilter = NoiseGateFilter;
exports.NoiseSuppressFilter = NoiseSuppressFilter;
exports.RenderDelayFilter = RenderDelayFilter;
exports.ScrollFilter = ScrollFilter;
exports.SharpenFilter = SharpenFilter;
//# sourceMappingURL=index.js.map
