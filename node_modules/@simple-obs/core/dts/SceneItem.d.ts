import { Scene } from "./Scene";
import { Source } from "./Source";
import { DeepPartial } from "./types";
export declare enum Alignment {
    CenterLeft = 1,
    Center = 0,
    CenterRight = 2,
    TopLeft = 5,
    TopCenter = 4,
    TopRight = 6,
    BottomLeft = 9,
    BottomCenter = 8,
    BottomRight = 10
}
export declare type SceneItemProperties = {
    position: {
        x: number;
        y: number;
        alignment: Alignment;
    };
    scale: {
        x: number;
        y: number;
        filter: string;
    };
    crop: {
        top: number;
        right: number;
        bottom: number;
        left: number;
    };
    bounds: {
        type: string;
        alignment: Alignment;
        x: number;
        y: number;
    };
    rotation: number;
    visible: boolean;
    locked: boolean;
    sourceWidth: number;
    sourceHeight: number;
    width: number;
    height: number;
};
export declare const DEFAULT_SCENE_ITEM_PROPERTIES: SceneItemProperties;
/**
 * Represents an item of a source in OBS.
 * Creation of a SceneItem assumes that the item already exists in OBS.
 * It's the responsibility of the caller (probably a Source) to ensure that
 * the item has been created. SceneItems are for accessing already existing items.
 */
export declare class SceneItem<TSource extends Source = Source, Properties extends SceneItemProperties = SceneItemProperties> {
    source: TSource;
    scene: Scene;
    id: number;
    ref: string;
    constructor(source: TSource, scene: Scene, id: number, ref: string);
    properties: Properties;
    setProperties(properties: DeepPartial<Properties>): Promise<void>;
    /**
     * Some sources have custom settings for width and height. Thus, sourceWidth and
     * sourceHeight for their scene items can change. This method reassigns these values and
     * calculates properties.width and properties.height as a product of the source dimensions
     * and item scale.
     */
    updateSizeFromSource(sourceWidth?: number, sourceHeight?: number): void;
    getProperties(): Promise<Properties>;
    delete(): Promise<{}>;
}
//# sourceMappingURL=SceneItem.d.ts.map