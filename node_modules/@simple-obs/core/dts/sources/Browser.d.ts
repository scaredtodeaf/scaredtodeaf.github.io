import { Scene } from "../Scene";
import { SceneItem } from "../SceneItem";
import { Source, SourceFilters } from "../Source";
import { DeepPartial } from "../types";
declare type Settings = {
    url: string;
    width: number;
    height: number;
    reroute_audio: boolean;
};
export declare class BrowserSourceItem<Source extends BrowserSource> extends SceneItem<Source> {
    constructor(source: Source, scene: Scene, id: number, ref: string);
}
/**
 * **Warning**: BrowserSource items will not have correct properties when they are
 * initialized, as browser sources are always created with a width and height of 0.
 * If width and height are not provided in the source's intial settings, it's intial
 * item will have a width and height of 0 until item.getProperties is called,
 * or the source's width and height are updated.
 */
export declare class BrowserSource<F extends SourceFilters = SourceFilters> extends Source<Settings, F> {
    type: string;
    createItemInstance(scene: Scene, id: number, ref: string): BrowserSourceItem<this>;
    setSettings(settings: DeepPartial<Settings>): Promise<void>;
}
export {};
//# sourceMappingURL=Browser.d.ts.map